// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CDKStack Infrastructure Test 1`] = `
Object {
  "Outputs": Object {
    "HttpEndpoint": Object {
      "Export": Object {
        "Name": "HttpApiEndPoint",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "HttpApiF5A9A8A7",
          "ApiEndpoint",
        ],
      },
    },
    "region": Object {
      "Value": Object {
        "Ref": "AWS::Region",
      },
    },
    "userPoolClientId": Object {
      "Value": Object {
        "Ref": "UserPoolClient2F5918F7",
      },
    },
    "userPoolId": Object {
      "Value": Object {
        "Ref": "UserPool6BA7E5F2",
      },
    },
  },
  "Resources": Object {
    "HttpApiDefaultRoute146696CE": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": Object {
          "Ref": "HttpApiuserpoolauthorizerFEBA2CB6",
        },
        "RouteKey": "$default",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "HttpApiDefaultRouteHttpLambda91177580",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpApiDefaultRouteHttpLambda91177580": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "LambdaService68B9B9DF",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpApiDefaultRouteHttpLambdaPermissionDE2D6043": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaService68B9B9DF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "HttpApiDefaultStage3EEB07D6": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "HttpApiF5A9A8A7": Object {
      "Properties": Object {
        "Name": "HttpApiService",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "HttpApiuserpoolauthorizerFEBA2CB6": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "AuthorizerType": "JWT",
        "IdentitySource": Array [
          "$request.header.Authorization",
        ],
        "JwtConfiguration": Object {
          "Audience": Array [
            Object {
              "Ref": "UserPoolClient2F5918F7",
            },
          ],
          "Issuer": Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://cognito-idp.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".amazonaws.com/",
                Object {
                  "Ref": "UserPool6BA7E5F2",
                },
              ],
            ],
          },
        },
        "Name": "user-pool-authorizer",
      },
      "Type": "AWS::ApiGatewayV2::Authorizer",
    },
    "LambdaService68B9B9DF": Object {
      "DependsOn": Array [
        "LambdaServiceServiceRole71319041",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "1b28602b399409e0f4d3f65b90006b764fbc83b292d3f287adeff677e8a78781.zip",
        },
        "FunctionName": "LambdaService",
        "Handler": "buildLambda.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaServiceServiceRole71319041",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaServiceServiceRole71319041": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UserPool6BA7E5F2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": false,
        },
        "AliasAttributes": Array [
          "email",
        ],
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": Object {
          "PasswordPolicy": Object {
            "MinimumLength": 6,
            "RequireLowercase": false,
            "RequireNumbers": false,
            "RequireSymbols": false,
            "RequireUppercase": false,
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "my-user-pool",
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "UserPoolClient2F5918F7": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "ExplicitAuthFlows": Array [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "UserPool6BA7E5F2",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
  },
}
`;
