{"version":3,"file":"resource.js","sourceRoot":"","sources":["resource.ts"],"names":[],"mappings":";;;;;AAKA,oDAAuB;AAKvB,MAAqB,QAAQ;IAS3B,YAAmB,aAA4B,EAAE,IAAY,EAAE,EAAU,EAAE,SAAiB;QAHlF,SAAI,GAAW,EAAE,CAAC;QAI1B,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,oFAAoF;QACpF,0FAA0F;QAC1F,oFAAoF;QACpF,gDAAgD;QAChD,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC3C,IAAI,CAAC,IAAI,GAAG,GAAG,SAAS,IAAI,EAAE,EAAE,CAAC;SAClC;IACH,CAAC;IAEM,KAAK,CAAC,GAAG;QACd,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,IAA+B;QACjD,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,6DAA6D;IACtD,KAAK,CAAC,MAAM;QACjB,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,qEAAqE;IACrE;;OAEG;IACO,KAAK,CAAC,OAAO,KAAmB,CAAC;CAC5C;AA5CD,2BA4CC","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *  SPDX-License-Identifier: Apache-2.0\n */\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport _ from 'lodash';\nimport ClientSession from '../../clientSession';\nimport Setup from '../../setup';\nimport Settings from '../../utils/settings';\n\nexport default class Resource {\n  private _type: string;\n  private _parentApi: string;\n  protected _settings: Settings;\n  protected _axiosInstance: AxiosInstance;\n  protected _id: string;\n  protected _api: string = '';\n  protected _setup: Setup;\n\n  public constructor(clientSession: ClientSession, type: string, id: string, parentApi: string) {\n    this._axiosInstance = clientSession.getAxiosInstance();\n    this._settings = clientSession.getSettings();\n    this._setup = clientSession.getSetup();\n    this._type = type;\n    this._id = id;\n    this._parentApi = parentApi;\n\n    // Most child resources have standard api patterns: /api/<parent resource type>/{id}\n    // But we can only assume this if both the 'id' and 'parentApi' are provided. In addition,\n    // the extending class can simply choose to construct their own specialized api path\n    // and do so in their own constructor functions.\n    if (!_.isEmpty(id) && !_.isEmpty(parentApi)) {\n      this._api = `${parentApi}/${id}`;\n    }\n  }\n\n  public async get(): Promise<AxiosResponse> {\n    return this._axiosInstance.get(this._api);\n  }\n\n  public async update(body: { [key: string]: string }): Promise<AxiosResponse> {\n    return this._axiosInstance.put(this._api, body);\n  }\n\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public async delete(): Promise<void> {\n    await this._axiosInstance.delete(this._api);\n  }\n\n  // This method should be overridden by the class extending `resource`\n  /**\n   * Delete any resource that was created\n   */\n  protected async cleanup(): Promise<void> {}\n}\n"]}