{"version":3,"file":"dataset.js","sourceRoot":"","sources":["dataset.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAIH,+DAA4D;AAC5D,gEAAwC;AAExC,MAAqB,OAAQ,SAAQ,kBAAQ;IAC3C,YAAmB,EAAU,EAAE,aAA4B,EAAE,SAAiB;QAC5E,KAAK,CAAC,aAAa,EAAE,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IACjD,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,WAAqC;QACtD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,QAAQ,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;IAES,KAAK,CAAC,OAAO;QACrB,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;QACnE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAC5F,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC;QAEvC,mGAAmG;QACnG,MAAM,aAAa,GAAG,IAAI,6BAAa,EAAE,CAAC;QAC1C,MAAM,aAAa,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACzD,MAAM,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;CACF;AAnBD,0BAmBC","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *  SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AxiosResponse } from 'axios';\nimport ClientSession from '../../clientSession';\nimport { DatasetHelper } from '../../complex/datasetHelper';\nimport Resource from '../base/resource';\n\nexport default class Dataset extends Resource {\n  public constructor(id: string, clientSession: ClientSession, parentApi: string) {\n    super(clientSession, 'dataset', id, parentApi);\n  }\n\n  public async share(requestBody: { [id: string]: string }): Promise<AxiosResponse> {\n    return this._axiosInstance.post(`${this._api}/share`, requestBody);\n  }\n\n  protected async cleanup(): Promise<void> {\n    const defAdminSession = await this._setup.getDefaultAdminSession();\n    const { data: resource } = await defAdminSession.resources.datasets.dataset(this._id).get();\n    const { storageName, path } = resource;\n\n    // Delete DDB entries, and path folder from bucket (to prevent test resources polluting a prod env)\n    const datasetHelper = new DatasetHelper();\n    await datasetHelper.deleteS3Resources(storageName, path);\n    await datasetHelper.deleteDdbRecords(this._id);\n  }\n}\n"]}