{"version":3,"file":"datasets.js","sourceRoot":"","sources":["datasets.ts"],"names":[],"mappings":";;;;;AAMA,0FAAkE;AAClE,oFAA4D;AAC5D,wDAAgC;AAEhC,MAAqB,QAAS,SAAQ,4BAAkB;IACtD,YAAmB,aAA4B;QAC7C,KAAK,CAAC,aAAa,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;IACzB,CAAC;IAEM,OAAO,CAAC,EAAU;QACvB,OAAO,IAAI,iBAAO,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,WAAqC;QACvD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,SAAS,EAAE,WAAW,CAAC,CAAC;IACtE,CAAC;IAES,cAAc,CAAC,QAA8B;;QACrD,MAAM,mBAAmB,GAAG,IAAI,6BAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACjF,MAAM,WAAW,GAAG,mBAAmB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC/D,OAAO;YACL,WAAW,EAAE,MAAA,QAAQ,CAAC,WAAW,mCAAI,WAAW;YAChD,IAAI,EAAE,MAAA,QAAQ,CAAC,IAAI,mCAAI,WAAW;YAClC,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,YAAY,EAAE,QAAQ,CAAC,YAAY;YACnC,MAAM,EAAE,QAAQ,CAAC,MAAM;SACxB,CAAC;IACJ,CAAC;CACF;AAzBD,2BAyBC","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *  SPDX-License-Identifier: Apache-2.0\n */\nimport { AxiosResponse } from 'axios';\nimport ClientSession from '../../clientSession';\nimport RandomTextGenerator from '../../utils/randomTextGenerator';\nimport CollectionResource from '../base/collectionResource';\nimport Dataset from './dataset';\n\nexport default class Datasets extends CollectionResource {\n  public constructor(clientSession: ClientSession) {\n    super(clientSession, 'datasets', 'dataset');\n    this._api = 'datasets';\n  }\n\n  public dataset(id: string): Dataset {\n    return new Dataset(id, this._clientSession, this._api);\n  }\n\n  public async import(requestBody: { [id: string]: string }): Promise<AxiosResponse> {\n    return this._axiosInstance.post(`${this._api}/import`, requestBody);\n  }\n\n  protected _buildDefaults(resource: DataSetCreateRequest): DataSetCreateRequest {\n    const randomTextGenerator = new RandomTextGenerator(this._settings.get('runId'));\n    const dataSetName = randomTextGenerator.getFakeText('test-DS');\n    return {\n      datasetName: resource.datasetName ?? dataSetName,\n      path: resource.path ?? dataSetName,\n      storageName: resource.storageName,\n      awsAccountId: resource.awsAccountId,\n      region: resource.region\n    };\n  }\n}\n\ninterface DataSetCreateRequest {\n  datasetName: string;\n  storageName: string;\n  path: string;\n  awsAccountId: string;\n  region: string;\n}\n"]}