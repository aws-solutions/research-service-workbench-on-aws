{"version":3,"file":"utilities.js","sourceRoot":"","sources":["utilities.ts"],"names":[],"mappings":";;;;;;AAAA;;;GAGG;AACH,kEAA6D;AAC7D,+BAAoC;AACpC,2CAAoG;AACpG,4DAAoC;AAEpC;;;;;;;;GAQG;AACH,KAAK,UAAU,KAAK,CAAC,EAAU;IAC7B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3D,CAAC;AAyCQ,sBAAK;AAvCd,SAAS,cAAc,CAAC,WAAkB,EAAE,aAAwB;IAClE,MAAM,CAAC,WAAW,YAAY,mBAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACtD,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;AAC1D,CAAC;AAoCe,wCAAc;AAlC9B,SAAS,YAAY;IACnB,OAAO,GAAG,uCAAiB,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,IAAA,SAAM,GAAE,EAAE,CAAC;AACtE,CAAC;AAgCqC,oCAAY;AA9BlD,KAAK,UAAU,IAAI,CACjB,aAA+B,EAC/B,aAAuC,EACvC,oBAA6B,EAC7B,wBAAiC;IAEjC,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACjC,MAAM,kBAAkB,GAAG,oBAAoB,aAApB,oBAAoB,cAApB,oBAAoB,GAAI,+CAAmC,CAAC;IACvF,MAAM,eAAe,GAAG,wBAAwB,aAAxB,wBAAwB,cAAxB,wBAAwB,GAAI,4CAAgC,CAAC;IACrF,IAAI,wBAAwB,GAAG,CAAC,CAAC;IAEjC,IAAI,IAAI,GAAG,MAAM,aAAa,EAAE,CAAC;IACjC,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;QAClE,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,wBAAwB,GAAG,kBAAkB,EAAE;YAC5E,MAAM,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;YACpC,IAAI,GAAG,MAAM,aAAa,EAAE,CAAC;YAC7B,wBAAwB,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,aAAa,CAAC,GAAG,IAAI,CAAC;SAChE;QACD,IAAI,wBAAwB,IAAI,kBAAkB;YAChD,OAAO,CAAC,GAAG,CAAC,oCAAoC,kBAAkB,YAAY,CAAC,CAAC;;YAC7E,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;KACpD;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,GAAG,CACT;eACS,wBAAwB,6FAA6F,CAAC,EAAE,CAClI,CAAC;KACH;AACH,CAAC;AAE+B,oBAAI","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *  SPDX-License-Identifier: Apache-2.0\n */\nimport { resourceTypeToKey } from '@aws/workbench-core-base';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DEFAULT_POLLING_INTERVAL_SECONDS, DEFAULT_POLLING_MAX_WAITING_SECONDS } from './constants';\nimport HttpError from './HttpError';\n\n/**\n * Returns a promise that will be resolved in the requested time, ms.\n * Example: await sleep(200);\n * https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep/39914235#39914235\n *\n * @param ms - wait time in milliseconds\n *\n * @returns a promise, that will be resolved in the requested time\n */\nasync function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction checkHttpError(actualError: Error, expectedError: HttpError): void {\n  expect(actualError instanceof HttpError).toBeTruthy();\n  expect(expectedError.isEqual(actualError)).toBeTruthy();\n}\n\nfunction getFakeEnvId(): string {\n  return `${resourceTypeToKey.environment.toLowerCase()}-${uuidv4()}`;\n}\n\nasync function poll<T>(\n  conditionData: () => Promise<T>,\n  stopCondition: (resource: T) => boolean,\n  maxWaitTimeInSeconds?: number,\n  pollingIntervalInSeconds?: number\n): Promise<void> {\n  const startTimeInMs = Date.now();\n  const timeLimitInSeconds = maxWaitTimeInSeconds ?? DEFAULT_POLLING_MAX_WAITING_SECONDS;\n  const intervalSeconds = pollingIntervalInSeconds ?? DEFAULT_POLLING_INTERVAL_SECONDS;\n  let totalTimeWaitedInSeconds = 0;\n\n  let data = await conditionData();\n  try {\n    console.log(`Polling in progress. This will take a few minutes.`);\n    while (!stopCondition(data) && totalTimeWaitedInSeconds < timeLimitInSeconds) {\n      await sleep(intervalSeconds * 1000);\n      data = await conditionData();\n      totalTimeWaitedInSeconds = (Date.now() - startTimeInMs) / 1000;\n    }\n    if (totalTimeWaitedInSeconds >= timeLimitInSeconds)\n      console.log(`Polling exceeded the time limit (${timeLimitInSeconds} seconds).`);\n    else console.log(`Polling finished successfully.`);\n  } catch (e) {\n    console.log(\n      `Polling failed.\". \n      Waited ${totalTimeWaitedInSeconds} seconds for resource to reach valid state so it could finish polling; encountered error: ${e}`\n    );\n  }\n}\n\nexport { sleep, checkHttpError, poll, getFakeEnvId };\n"]}