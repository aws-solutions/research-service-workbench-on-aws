name: merge-release-to-develop

on:
  push:
    branches:
      - 'testRelease/**'

jobs:
  merge-release-to-testDevelop:
    runs-on: ubuntu-20.04
    steps:
      - name: git checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MERGE_TOKEN }}
          fetch-depth: 0
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      # There's no way for github actions to push to a protected branch. This is a workaround
      # See https://github.community/t/how-to-push-to-protected-branches-in-a-github-action/16101/30
      # - name: Temporarily disable branch protection on develop
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
      #     owner: aws-solutions
      #     repo: solution-spark-on-aws
      #     branch: testDevelop
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}

      - name: Set git config
        run: |
          git config user.email ${{ secrets.BOT-USER-EMAIL }}
          git config user.name ${{ secrets.BOT-USER }}
          git config commit.gpgsign true

      - name: enable merge commits
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{owner}/{repo}
          owner: aws-solutions
          repo: solution-spark-on-aws
          allow_merge_commit: true
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}

      - name: Merge to testDevelop
        run: |
          echo "Set the COMMIT_ID to merge to testDevelop to current workflow commit id"
          COMMIT_ID=$GITHUB_SHA
          git checkout testDevelop
          echo
          echo "  Attempting to merge the '${{github.ref_name}}' branch ($COMMIT_ID)"
          echo "  into the 'testDevelop' branch"
          echo
          git merge $COMMIT_ID --ff --no-edit -m "Merge ${{github.ref_name}} to testDevelop"
          git push origin testDevelop

      - name: disable merge commits
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{owner}/{repo}
          owner: aws-solutions
          repo: solution-spark-on-aws
          allow_merge_commit: false
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}

      # - name: Enable branch protection on develop
      #   uses: octokit/request-action@v2.x
      #   if: always() # Make sure to enable branch protection even if other steps fail
      #   with:
      #     route: POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
      #     owner: aws-solutions
      #     repo: solution-spark-on-aws
      #     branch: develop
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}
