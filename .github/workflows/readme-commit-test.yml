#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

name: Readme-commit-test
on:
  workflow_call:
    secrets:
      codeartifact-domain-name:
        required: true
      codeartifact-domain-owner:
        required: true
      codeartifact-region:
        required: true
      codeartifact-package-format:
        required: true
      codeartifact-repo-name:
        required: true
      gpg-private-key:
        required: true
      passphrase:
        required: true
      merge-token:
        required: true
      bot-user:
        required: true
      bot-user-email:
        required: true
      aws-dev-region:
        required: true
      assume-role:
        required: true
    outputs:
      readme_commit_hash:
        description: 'README update commit hash'
        value: "${{ jobs.readme-commit-test.outputs.readme_commit_hash }}"
      readme_changes_detected:
        description: 'Flag to detect whether README was updated or not'
        value: "${{ jobs.readme-commit-test.outputs.readme_changes_detected }}"
      version_commit_hash:
        description: 'README update commit hash'
        value: "${{ jobs.readme-commit-test.outputs.version_commit_hash }}"
      version_changes_detected:
        description: 'Flag to detect whether README was updated or not'
        value: "${{ jobs.readme-commit-test.outputs.version_changes_detected }}"

jobs:
  readme-commit-test:  
    runs-on: ubuntu-20.04
    environment: dev
    permissions:
      id-token: write
      contents: read
    outputs:
        readme_commit_hash: "${{ steps.auto-commit-action.outputs.commit_hash }}"
        readme_changes_detected: "${{ steps.auto-commit-action.outputs.changes_detected }}"
        version_commit_hash: "${{ steps.rush-version.outputs.commit_hash }}"
        version_changes_detected: "${{ steps.rush-version.outputs.changes_detected }}"
    env: 
      CODEARTIFACT_PACKAGE_REGISTRY: "${{ secrets.codeartifact-domain-name }}-${{ secrets.codeartifact-domain-owner }}.d.codeartifact.${{ secrets.codeartifact-region }}.amazonaws.com/${{ secrets.codeartifact-package-format }}/${{ secrets.codeartifact-repo-name }}/"

    steps:        
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.merge-token }}
          fetch-depth: 0

      - name: Base Action
        uses: ./.github/actions/baseAction

      - name: Rush test and update the README file in each package with the coverage badge
        run: node common/scripts/install-run-rush.js test --verbose

      - name: Update root README file with common coverage badge
        run: node common/scripts/install-run-rush.js common-coverage-make-badge
      
      - name: Update package info in root README file
        run: |
          cd workbench-core/repo-scripts/repo-toolbox
          node ../../../common/scripts/install-run-rushx.js readme -v || exit_status=$?
          if [[ $exit_status != 0 ]]; then
            node ../../../common/scripts/install-run-rushx.js readme
          fi

      - name: echo modified files
        run: git status

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.gpg-private-key }}
          passphrase: ${{ secrets.passphrase }}
          git_user_signingkey: true
          git_commit_gpgsign: true

        # There's no way for github actions to push to a protected branch. This is a workaround
        # See https://github.community/t/how-to-push-to-protected-branches-in-a-github-action/16101/30
      - name: Temporarily disable branch protection on testDevelop
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
          owner: awslabs
          repo: monorepo-for-service-workbench
          branch: testDevelop
        env:
          GITHUB_TOKEN: ${{ secrets.merge-token }}

      - name: Auto commit updated README files to testDevelop
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "docs: Auto README.md updates"
          commit_options: '--no-verify --gpg-sign'
          commit_user_name: ${{ secrets.bot-user }} # defaults to "github-actions[bot]"
          commit_user_email: ${{ secrets.bot-user-email }}
          file_pattern: "README.md **/README.md"
          branch: testDevelop
      
      - name: git checkout to new version if README was updated
        run: |
          if ${{ steps.auto-commit-action.outputs.changes_detected }}; then
            git checkout ${{ steps.auto-commit-action.outputs.commit_hash }}
          fi
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.aws-dev-region }}
          role-to-assume: ${{ secrets.assume-role }}
          role-session-name: OIDCSessionName

      - name: Rush version
        id: rush-version
        run: node common/scripts/install-run-rush.js version --bump --target-branch testDevelop --ignore-git-hooks
      
      - name: git checkout to new version if Rush version performed updates
        run: |
          if ${{ steps.rush-version.outputs.changes_detected }}; then
            git checkout ${{ steps.rush-version.outputs.commit_hash }}
          fi

      - name: CodeArtifact Auth
        run: echo "CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ${{ secrets.codeartifact-domain-name }} --domain-owner ${{ secrets.codeartifact-domain-owner }} --query authorizationToken --duration-seconds 900 --output text`" >> $GITHUB_ENV

      - name: Rush Publish
        run: |
          PUBLISH_CMD="--add-commit-details --apply --registry https://$CODEARTIFACT_PACKAGE_REGISTRY --npm-auth-token $CODEARTIFACT_AUTH_TOKEN --add-commit-details --ignore-git-hooks --include-all --target-branch testDevelop --publish"
          node common/scripts/install-run-rush.js publish $PUBLISH_CMD
          
      - name: Enable branch protection on testDevelop
        uses: octokit/request-action@v2.x
        if: always() # Make sure to enable branch protection even if other steps fail
        with:
          route: POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
          owner: awslabs
          repo: monorepo-for-service-workbench
          branch: testDevelop
        env:
          GITHUB_TOKEN: ${{ secrets.merge-token }}