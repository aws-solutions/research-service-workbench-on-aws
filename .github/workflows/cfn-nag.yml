#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

name: Cfn-nag-scan
on: ['pull_request']

jobs:
  cfn-nag-scan:
    name: Run cfn-nag scan
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Base Action
        uses: ./.github/actions/baseAction

      - name: cdk synth swb-reference
        run: |
          cd solutions/swb-reference
          node ../../common/scripts/install-run-rushx.js compile
          STAGE=testEnv node ../../common/scripts/install-run-rushx.js cdk synth

      # - name: cdk synth swb-ui
      #   run: |
      #     cd solutions/swb-ui/infrastructure
      #     node ../../../common/scripts/install-run-rushx.js cdk synth

      - name: Run cfn-nag on all .template.json files
        uses: stelligent/cfn_nag@master
        with:
          input_path: .
          extra_args: --fail-on-warnings --template-pattern .template.json -g -o json
          output_path: cfn_nag_json.out

      - name: Run cfn-nag on all .cfn.yaml files
        uses: stelligent/cfn_nag@master
        with:
          input_path: .
          extra_args: --fail-on-warnings --template-pattern .cfn.yaml -g -o json
          output_path: cfn_nag_yaml.out

      - name: Grep cfn-nag for violations
        uses: sergeysova/jq-action@v2
        id: cfn-nag
        # No. of violations: warnings + errors
        with:
          cmd: |
            cat cfn_nag_json.out cfn_nag_yaml.out | jq -s 'map(.[])' > cfn_nag.out
            jq '.[].file_results.violations | length' cfn_nag.out | jq -s 'add'

      - name: Fail if violations detected in cfn-nag
        run: exit ${{ steps.cfn-nag.outputs.value }}