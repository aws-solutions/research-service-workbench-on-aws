name: Dev-deploy-and-integration-test
on:
  push:
    branches:
      - develop

jobs:
  deploy-integration:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Cache Rush
        uses: actions/cache@v3
        with:
          path: |
            common/temp/install-run
            ~/.rush
          key: ${{ runner.os }}-rush-${{ hashFiles('rush.json') }}
          restore-keys: |
            ${{ runner.os }}-rush-
            ${{ runner.os }}-

      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            ${{ runner.os }}-

      - name: Install dependecies
        run: node common/scripts/install-run-rush.js install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_DEV_REGION }}
          role-to-assume: ${{ secrets.ASSUME_ROLE }}
          role-session-name: OIDCSessionName
      
      - name: Deploy SWB-Reference to Dev
        run: |
          cd solutions/swb-reference
          STAGE='dev' node ../../common/scripts/install-run-rushx.js cdk bootstrap ${{ secrets.AWS_DEV_ACCOUNT_REGION }} -v
          STAGE='dev' node ../../common/scripts/install-run-rushx.js cdk-deploy --all --require-approval never
          STAGE='dev' node ../../common/scripts/install-run-rushx.js run-postDeployment

  merge-develop-to-main:
    name: Merge develop to main
    runs-on: ubuntu-latest
    needs: [deploy-integration]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.MERGE_TOKEN }}
          fetch-depth: 0
      # There's no way for github actions to push to a protected branch. This is a workaround
      # See https://github.community/t/how-to-push-to-protected-branches-in-a-github-action/16101/30
      - name: Temporarily disable branch protection
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
          owner: awslabs
          repo: monorepo-for-service-workbench
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}

      - name: Merge to main
        run: |
          git checkout main
          echo
          echo "  Attempting to merge the 'develop' branch ($(git log -1 --pretty=%H develop))"
          echo "  into the 'main' branch ($(git log -1 --pretty=%H main))"
          echo
          git merge --ff-only --no-edit develop
          git push origin main
          
      - name: Enable branch protection
        uses: octokit/request-action@v2.x
        if: always() # Make sure to enable branch protection even if other steps fail
        with:
          route: POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
          owner: awslabs
          repo: monorepo-for-service-workbench
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}
