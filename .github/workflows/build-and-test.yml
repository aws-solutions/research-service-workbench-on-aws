#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

name: Build-and-test
on: ['pull_request']

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Cache Rush
        uses: actions/cache@v3
        with:
          path: |
            common/temp/install-run
            ~/.rush
          key: ${{ runner.os }}-rush-${{ hashFiles('rush.json') }}
          restore-keys: |
            ${{ runner.os }}-rush-
            ${{ runner.os }}-

      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            ${{ runner.os }}-

      - name: Install dependecies
        run: node common/scripts/install-run-rush.js install
      
      - name: Rush check
        run: node common/scripts/install-run-rush.js check

      - name: Rush build
        run: node common/scripts/install-run-rush.js build --verbose

      - name: Rush test
        run: node common/scripts/install-run-rush.js test:only --verbose

      - name: Code Coverage badge check
        run: |
          echo $GITHUB_HEAD_REF
          node common/scripts/install-run-rush.js make-badges --ci

      - name: Configure AWS Credentials
        if: ${{ github.head_ref == 'feature/code-deployment-cleanup' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_DEV_REGION }}
          role-to-assume: ${{ secrets.ASSUME_ROLE }}
          role-session-name: OIDCSessionName
      
      - name: Deploy POC to Dev
        if: ${{ github.head_ref == 'feature/code-deployment-cleanup' }}
        id: endpoint
        run: |
          cd workbench-core/infrastructure
          node ../../common/scripts/install-run-rushx.js cdk bootstrap ${{ secrets.AWS_DEV_ACCOUNT_REGION }} -v
          node ../../common/scripts/install-run-rushx.js cdk:deploy
          echo '::set-output name=SERVICE_ENDPOINT::`jq ".InfrastructureStack.HttpEndpoint" cdk-outputs.json | tr -d '"'`'
      
      - name: Integration test
        if: ${{ github.head_ref == 'feature/code-deployment-cleanup' }}
        env: 
          SERVICE_ENDPOINT: "${{ steps.outputs.endpoint.SERVICE_ENDPOINT }}"
        run: |
          echo "$SERVICE_ENDPOINT"