name: Build-and-test
on:
  pull_request:
    branches:
      - testdevelop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Cache Rush
        uses: actions/cache@v3
        with:
          path: |
            common/temp/install-run
            ~/.rush
          key: ${{ runner.os }}-rush-${{ hashFiles('rush.json') }}
          restore-keys: |
            ${{ runner.os }}-rush-
            ${{ runner.os }}-

      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            ${{ runner.os }}-

      - name: Install dependecies
        run: node common/scripts/install-run-rush.js install
      
      - name: Rush check
        run: node common/scripts/install-run-rush.js check

      - name: Rush build
        run: node common/scripts/install-run-rush.js build:ci --verbose

      - name: Rush test
        run: node common/scripts/install-run-rush.js test:only --verbose

      - name: Code Coverage badge check
        run: node common/scripts/install-run-rush.js make-badges --ci

  scan-for-secrets:
    name: Scan for secrets
    runs-on: ubuntu-latest
    steps:
      - name: Install Git Secrets
        run: |
          cd ~
          git clone https://github.com/awslabs/git-secrets.git && cd git-secrets
          sudo make install
          git secrets --register-aws --global
          # Prevent leakage of internal tools
          git secrets --add '[aA]pollo|[bB]razil|[cC]oral|[oO]din' --global
          git secrets --add 'tt\.amazon\.com|issues\.amazon\.com|cr\.amazon\.com' --global
          # Prevent leakage of aws-iso
          git secrets --add 'ic\.gov|sgov\.gov' --global
          git secrets --add 'us-iso|aws-iso' --global
          git secrets --add 'smil\.mil' --global
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Git Secrets
        run: git secrets --scan

      - name: Print remediation message
        if: failure()
        run: echo "git secrets found potential leaked credentials. If ANY credentials were committed, they MUST be immediately revoked."