#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

name: Enable Branch Protection Action
description: Enable Branch Protection
inputs:
  merge_token:
    description: "MERGE TOKEN"
    required: true

runs:
  using: "composite"
  steps:
    - name: 'Construct required_pull_request_reviews object'
      id: pr_review
      shell: bash
      run: |
        required_pr_reviews_json="$(cat <<EOF
        { "require_code_owner_reviews": true, "dismiss_stale_reviews": true, "required_approving_review_count": 1 }
        EOF
        )"
        echo "::set-output name=required_pr_reviews::${required_pr_reviews_json}"

    - name: 'Construct required_status_checks object'
      id: status_check
      shell: bash
      run: |
        require_status_check_json="$(cat <<EOF
        { "strict": true, "contexts": ['Only create PR against develop/release branch, not main branch', 'Only create PR against develop/release branch, not stage branch', 'Scan for secrets', 'Run cfn-nag scan', 'Validate PR title', 'build-and-test', 'license-checker', 'pnpm-audit', 'run-rush-change-verify', 'check-license-header', 'Viperlight scan'] }
        EOF
        )"
        echo "::set-output name=require_status_check::${require_status_check_json}"

    - name: 'Construct restrictions object'
      id: gh_restrictions
      shell: bash
      run: |
        restrictions_json="$(cat <<EOF
        null
        EOF
        )"
        echo "::set-output name=restrictions::${restrictions_json}"

    - name: Enable branch protection on ${{ github.ref_name }}
      uses: octokit/request-action@v2.x
      with:
        route: PUT /repos/{owner}/{repo}/branches/{branch}/protection
        owner: aws-solutions
        repo: research-service-workbench-on-aws
        branch: ${{ github.ref_name }}
        enforce_admins: true
        required_pull_request_reviews: '${{ steps.pr_review.outputs.required_pr_reviews }}'
        required_status_checks: '${{ steps.status_check.outputs.require_status_check }}'
        restrictions: '${{ steps.gh_restrictions.outputs.restrictions }}'
      env:
        GITHUB_TOKEN: ${{ inputs.merge_token }}